[manifest]
version = "1.0.0"
dump_lua = true
priority = 69


[[patches]]
[patches.regex]
target = "functions/button_callbacks.lua"
position = "at"
pattern = '''
(?<value>math\.max\(0\., math\.log\(G\.ARGS\.score_intensity\.earned_score, 5\)-2\))'''
payload = "Cartomancer.get_flames_intensity()"

[[patches]]
[patches.regex]
target = "functions/misc_functions.lua"
position = "at"
pattern = '''
(?<value>\(not G\.video_organ and G\.STATE == G\.STATES\.SPLASH\) and 0 or AC\[k\]\.vol and v\.volfunc\(AC\[k\]\.vol\) or 0)'''
payload = "Cartomancer.handle_flames_volume($value)"

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''for k, v in pairs(G.ARGS.flame_handler) do'''
position = 'before'
payload = '''
Cartomancer.init_setting_flames()
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''_F.timer = _F.timer + G.real_dt*(1 + _F.intensity*0.2)'''
position = 'before'
payload = '''
if v.id == 'flame_chips_cart' or v.id == 'flame_mult_cart' then
    _F.intensity = Cartomancer.get_flames_intensity(true)
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''e.config.object:get_pos_pixel()'''
position = 'after'
payload = '''
Cartomancer.align_object(e.config.object)
'''
match_indent = true
